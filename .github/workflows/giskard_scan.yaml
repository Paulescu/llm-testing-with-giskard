name: Giskard Scan

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'hyper-parameters.yaml'

env:
  PYTHON_VERSION: 3.10.4
  POETRY_VERSION: 1.7.0
  POETRY_URL: https://install.python-poetry.org

  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  GISKARD_SERVER_URL: ${{ secrets.GISKARD_SERVER_URL }}
  GISKARD_API_KEY: ${{ secrets.GISKARD_API_KEY }}
  GISKARD_PROJECT_NAME: ${{ secrets.GISKRAD_PROJECT_NAME }}
  HF_TOKEN: ${{ secrets.HF_TOKEN }}


jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
    
      - name: Cache Poetry cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-cache-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ env.POETRY_VERSION }}
        
      - name: Cache Packages
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}
        
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}
        
      - name: Install Poetry
        run: |
          curl -sSL ${{ env.POETRY_URL }} | python - --version ${{ env.POETRY_VERSION }}
          echo "$HOME/.local/bin" >> $GITHUB_PATH
        
      - name: Install Dependencies
        run: poetry install

      - name: Run model
        # env: 
        #   OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        #   GISKARD_SERVER_URL: ${{ secrets.GISKARD_SERVER_URL }}
        #   GISKARD_API_KEY: ${{ secrets.GISKARD_API_KEY }}
        #   GISKRAD_PROJECT_NAME: ${{ secrets.GISKRAD_PROJECT_NAME }}
        #   HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: make model
        
      - name: Run the Giskard Scan üê¢
        id: giskard_scan
        run: |
          make scan
          output=$(find report -iname "*.md" -exec basename {} .md ';')
          echo "::set-output name=report_name::$output"
      
      - name: Extract branch name üå≤
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Upload the scan report ü§ñ
        id: extract_sha
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          mkdir -p reports
          cp report/* reports/.
          git add reports
          git commit -m "ü§ñ github-bot: Updated Reports"
          git push https://${{ secrets.GH_PAT }}@github.com/Paulescu/testing-llms-in-the-real-world.git HEAD:main
          echo "::set-output name=sha::$(git rev-parse HEAD)"
        
      - name: Extract md report
        # https://stackoverflow.com/questions/74137120/how-to-fix-or-avoid-error-unable-to-process-file-command-output-successfully
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "md_report<<$EOF" >> $GITHUB_OUTPUT
          echo "$(cat report/*.md)" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT
        id: extract_md_report
    
      - name: PR comment ü§ñ
        uses: wow-actions/auto-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          pullRequestOpened: |
            Hi, this is a report generated by the **Giskard scan** üê¢.
            
            We have identified potential **vulnerabilities** in your model based on an automated scan.
            
            However, it's important to note that automated scans may produce false positives or miss certain vulnerabilities. We encourage you to review the findings and assess the impact accordingly.
            
            ## Report summary
            
            ${{ steps.extract_md_report.outputs.md_report }}
            
            [**View full report**](https://htmlpreview.github.io/?${{ github.server_url }}/${{ github.repository 
            }}/blob/${{ steps.extract_sha.outputs.sha }}/reports/${{ steps.giskard_scan.outputs.report_name }}.html)
            
            [**Debug your scan issues (demo)**](https://giskardai-giskard.hf.space/main/projects/105/testing/52/overview)